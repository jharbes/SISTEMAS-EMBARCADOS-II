CCS PCH C Compiler, Version 5.099, 54900               07-out-21 17:01

               Filename:   C:\Users\wvair\Dropbox\CEFET\Sistemas de Informação 2021.1\Sistemas Embarcados 2\8-Aula 07OUT21\PWM\PWM.lst

               ROM used:   1264 bytes (4%)
                           Largest free fragment is 31500
               RAM used:   35 (2%) at main() level
                           55 (4%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   03E2
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  F9D.0
0056:  GOTO   0060
005A:  BTFSC  F9E.0
005C:  GOTO   00AE
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... #include <PWM.h>
.................... #include <18F4520.h>
.................... //////////// Standard Header file for the PIC18F4520 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
*
0134:  BCF    F9E.0
0136:  GOTO   0060
.................... #device PIC18F4520
*
00AE:  MOVLW  00
00B0:  BSF    FD8.0
00B2:  SUBFWB 19,W
00B4:  MOVWF  00
00B6:  MOVLW  00
00B8:  SUBFWB 1A,W
00BA:  MOVWF  03
00BC:  MOVFF  00,01
00C0:  MOVF   03,F
00C2:  BNZ   00D6
00C4:  MOVF   01,W
00C6:  SUBLW  39
00C8:  BNC   00D6
00CA:  MOVLW  F8
00CC:  MOVWF  FCF
00CE:  MOVLW  31
00D0:  MOVWF  FCE
00D2:  NOP   
00D4:  BRA    011A
00D6:  MOVLW  00
00D8:  BSF    FD8.0
00DA:  SUBFWB 1B,W
00DC:  MOVWF  00
00DE:  MOVLW  00
00E0:  SUBFWB 1C,W
00E2:  MOVWF  03
00E4:  MOVFF  00,01
00E8:  MOVF   03,F
00EA:  BNZ   00FE
00EC:  MOVF   01,W
00EE:  SUBLW  39
00F0:  BNC   00FE
00F2:  MOVLW  F8
00F4:  MOVWF  FCF
00F6:  MOVLW  31
00F8:  MOVWF  FCE
00FA:  NOP   
00FC:  BRA    0122
00FE:  MOVF   1D,W
0100:  BZ    010E
0102:  MOVFF  1C,FCF
0106:  MOVFF  1B,FCE
010A:  NOP   
010C:  BRA    011A
010E:  MOVFF  1A,FCF
0112:  MOVFF  19,FCE
0116:  NOP   
0118:  BRA    0122
011A:  BCF    F94.3
011C:  BCF    F8B.3
011E:  CLRF   1D
0120:  BRA    0134
0122:  BTFSS  1E.0
0124:  BRA    012C
0126:  BCF    F94.3
0128:  BSF    F8B.3
012A:  BRA    0130
012C:  BCF    F94.3
012E:  BCF    F8B.3
0130:  MOVLW  01
0132:  MOVWF  1D
*
013A:  MOVF   21,W
013C:  MULWF  23
013E:  MOVFF  FF3,01
0142:  MOVFF  FF4,00
0146:  MULWF  24
0148:  MOVF   FF3,W
014A:  ADDWF  00,F
014C:  MOVF   22,W
014E:  MULWF  23
0150:  MOVF   FF3,W
0152:  ADDWFC 00,W
0154:  MOVWF  02
0156:  RETURN 0
0158:  CLRF   31
015A:  CLRF   32
015C:  MOVLW  01
015E:  MOVWF  33
0160:  CLRF   FDA
0162:  CLRF   FD9
0164:  CLRF   36
0166:  MOVLW  29
0168:  MOVWF  35
016A:  CLRF   FEA
016C:  MOVLW  2D
016E:  MOVWF  FE9
0170:  MOVFF  36,FE2
0174:  MOVFF  35,FE1
0178:  MOVFF  33,34
017C:  BCF    FD8.0
017E:  MOVF   FE5,W
0180:  MULWF  FEE
0182:  MOVF   FF3,W
0184:  ADDWFC 31,F
0186:  MOVF   FF4,W
0188:  ADDWFC 32,F
018A:  DECFSZ 34,F
018C:  BRA    017C
018E:  MOVFF  31,FDE
0192:  MOVFF  32,31
0196:  CLRF   32
0198:  BTFSC  FD8.0
019A:  INCF   32,F
019C:  INCF   35,F
019E:  BTFSC  FD8.2
01A0:  INCF   36,F
01A2:  INCF   33,F
01A4:  MOVF   33,W
01A6:  SUBLW  05
01A8:  BNZ   016A
01AA:  RETURN 0
01AC:  BTFSC  FD8.1
01AE:  BRA    01B6
01B0:  CLRF   FEA
01B2:  MOVLW  31
01B4:  MOVWF  FE9
01B6:  CLRF   00
01B8:  CLRF   01
01BA:  CLRF   02
01BC:  CLRF   03
01BE:  CLRF   31
01C0:  CLRF   32
01C2:  CLRF   33
01C4:  CLRF   34
01C6:  MOVF   30,W
01C8:  IORWF  2F,W
01CA:  IORWF  2E,W
01CC:  IORWF  2D,W
01CE:  BZ    0228
01D0:  MOVLW  20
01D2:  MOVWF  35
01D4:  BCF    FD8.0
01D6:  RLCF   29,F
01D8:  RLCF   2A,F
01DA:  RLCF   2B,F
01DC:  RLCF   2C,F
01DE:  RLCF   31,F
01E0:  RLCF   32,F
01E2:  RLCF   33,F
01E4:  RLCF   34,F
01E6:  MOVF   30,W
01E8:  SUBWF  34,W
01EA:  BNZ   01FC
01EC:  MOVF   2F,W
01EE:  SUBWF  33,W
01F0:  BNZ   01FC
01F2:  MOVF   2E,W
01F4:  SUBWF  32,W
01F6:  BNZ   01FC
01F8:  MOVF   2D,W
01FA:  SUBWF  31,W
01FC:  BNC   021C
01FE:  MOVF   2D,W
0200:  SUBWF  31,F
0202:  MOVF   2E,W
0204:  BTFSS  FD8.0
0206:  INCFSZ 2E,W
0208:  SUBWF  32,F
020A:  MOVF   2F,W
020C:  BTFSS  FD8.0
020E:  INCFSZ 2F,W
0210:  SUBWF  33,F
0212:  MOVF   30,W
0214:  BTFSS  FD8.0
0216:  INCFSZ 30,W
0218:  SUBWF  34,F
021A:  BSF    FD8.0
021C:  RLCF   00,F
021E:  RLCF   01,F
0220:  RLCF   02,F
0222:  RLCF   03,F
0224:  DECFSZ 35,F
0226:  BRA    01D4
0228:  MOVFF  31,FEF
022C:  MOVFF  32,FEC
0230:  MOVFF  33,FEC
0234:  MOVFF  34,FEC
0238:  RETURN 0
.................... 
.................... #list
.................... 
.................... //#device ADC=10
.................... 
.................... #FUSES NOWDT  // sem Watch Dog Timer
.................... #FUSES MCLR   // com Master Clear
.................... 
.................... #use delay(internal=8000000,restart_wdt)
*
02BC:  CLRF   FEA
02BE:  MOVLW  22
02C0:  MOVWF  FE9
02C2:  MOVF   FEF,W
02C4:  BZ    02E8
02C6:  MOVLW  02
02C8:  MOVWF  01
02CA:  MOVLW  BF
02CC:  MOVWF  00
02CE:  CLRWDT
02D0:  DECFSZ 00,F
02D2:  BRA    02CE
02D4:  DECFSZ 01,F
02D6:  BRA    02CA
02D8:  MOVLW  96
02DA:  MOVWF  00
02DC:  DECFSZ 00,F
02DE:  BRA    02DC
02E0:  BRA    02E2
02E2:  CLRWDT
02E4:  DECFSZ FEF,F
02E6:  BRA    02C6
02E8:  RETURN 0
.................... #USE PWM(TIMER=2, OUTPUT=PIN_C2, FREQUENCY=1000Hz, DUTY=50, STREAM=MOTOR_1)
*
023A:  MOVFF  FCB,25
023E:  CLRF   26
0240:  INCF   25,F
0242:  BTFSC  FD8.2
0244:  INCF   26,F
0246:  BCF    FD8.0
0248:  RLCF   25,F
024A:  RLCF   26,F
024C:  RLCF   25,F
024E:  RLCF   26,F
0250:  CLRF   2C
0252:  CLRF   2B
0254:  MOVFF  26,2A
0258:  MOVFF  25,29
025C:  CLRF   30
025E:  CLRF   2F
0260:  MOVFF  24,2E
0264:  MOVFF  23,2D
0268:  RCALL  0158
026A:  BCF    FD8.1
026C:  MOVFF  03,2C
0270:  MOVFF  02,2B
0274:  MOVFF  01,2A
0278:  MOVFF  00,29
027C:  CLRF   30
027E:  CLRF   2F
0280:  MOVLW  03
0282:  MOVWF  2E
0284:  MOVLW  E8
0286:  MOVWF  2D
0288:  RCALL  01AC
028A:  MOVF   01,W
028C:  SUBLW  03
028E:  BC    0296
0290:  MOVLW  03
0292:  MOVWF  01
0294:  SETF   00
0296:  MOVFF  00,02
029A:  RRCF   01,F
029C:  RRCF   00,F
029E:  RRCF   01,F
02A0:  RRCF   00,F
02A2:  MOVFF  00,FBE
02A6:  RLCF   02,F
02A8:  RLCF   02,F
02AA:  RLCF   02,F
02AC:  RLCF   02,F
02AE:  MOVLW  CF
02B0:  ANDWF  FBD,F
02B2:  MOVLW  30
02B4:  ANDWF  02,W
02B6:  IORWF  FBD,F
02B8:  GOTO   047C (RETURN)
.................... #USE PWM(TIMER=1, OUTPUT=PIN_C3, FREQUENCY=1000Hz, DUTY=50, STREAM=MOTOR_2)
*
02EA:  CLRF   2C
02EC:  CLRF   2B
02EE:  MOVFF  24,2A
02F2:  MOVFF  23,29
02F6:  CLRF   30
02F8:  CLRF   2F
02FA:  MOVLW  07
02FC:  MOVWF  2E
02FE:  MOVLW  D0
0300:  MOVWF  2D
0302:  RCALL  0158
0304:  BCF    FD8.1
0306:  MOVFF  03,2C
030A:  MOVFF  02,2B
030E:  MOVFF  01,2A
0312:  MOVFF  00,29
0316:  CLRF   30
0318:  CLRF   2F
031A:  MOVLW  03
031C:  MOVWF  2E
031E:  MOVLW  E8
0320:  MOVWF  2D
0322:  RCALL  01AC
0324:  MOVF   03,F
0326:  BNZ   032E
0328:  MOVF   02,W
032A:  SUBLW  00
032C:  BC    0332
032E:  SETF   01
0330:  SETF   00
0332:  MOVF   01,F
0334:  BNZ   0342
0336:  MOVF   00,W
0338:  SUBLW  57
033A:  BNC   0342
033C:  CLRF   03
033E:  MOVLW  00
0340:  BRA    035E
0342:  MOVFF  01,03
0346:  MOVF   00,W
0348:  ADDLW  A8
034A:  MOVWF  00
034C:  MOVLW  00
034E:  SUBWFB 03,F
0350:  MOVF   00,W
0352:  XORLW  FF
0354:  ADDLW  01
0356:  MOVWF  00
0358:  MOVLW  00
035A:  SUBFWB 03,F
035C:  MOVF   00,W
035E:  MOVWF  19
0360:  MOVFF  03,1A
0364:  MOVLW  E8
0366:  BSF    FD8.0
0368:  SUBFWB 23,W
036A:  MOVWF  00
036C:  MOVLW  03
036E:  SUBFWB 24,W
0370:  MOVWF  01
0372:  CLRF   2C
0374:  CLRF   2B
0376:  MOVLW  07
0378:  MOVWF  2A
037A:  MOVLW  D0
037C:  MOVWF  29
037E:  CLRF   30
0380:  CLRF   2F
0382:  MOVFF  01,2E
0386:  MOVFF  00,2D
038A:  RCALL  0158
038C:  BCF    FD8.1
038E:  MOVFF  03,2C
0392:  MOVFF  02,2B
0396:  MOVFF  01,2A
039A:  MOVFF  00,29
039E:  CLRF   30
03A0:  CLRF   2F
03A2:  MOVLW  03
03A4:  MOVWF  2E
03A6:  MOVLW  E8
03A8:  MOVWF  2D
03AA:  RCALL  01AC
03AC:  MOVF   01,F
03AE:  BNZ   03BC
03B0:  MOVF   00,W
03B2:  SUBLW  57
03B4:  BNC   03BC
03B6:  CLRF   03
03B8:  MOVLW  00
03BA:  BRA    03D8
03BC:  MOVFF  01,03
03C0:  MOVF   00,W
03C2:  ADDLW  A8
03C4:  MOVWF  00
03C6:  MOVLW  00
03C8:  SUBWFB 03,F
03CA:  MOVF   00,W
03CC:  XORLW  FF
03CE:  ADDLW  01
03D0:  MOVWF  00
03D2:  MOVLW  00
03D4:  SUBFWB 03,F
03D6:  MOVF   00,W
03D8:  MOVWF  1B
03DA:  MOVFF  03,1C
03DE:  GOTO   04D8 (RETURN)
.................... 
.................... 
.................... int16 i;
.................... 
.................... void main()
03E2:  CLRF   FF8
03E4:  BCF    FD0.7
03E6:  BSF    07.7
03E8:  MOVLW  70
03EA:  MOVWF  FD3
03EC:  CLRF   F9B
03EE:  MOVF   FD3,W
03F0:  MOVLW  7C
03F2:  MOVWF  FCB
03F4:  MOVLW  06
03F6:  MOVWF  FCA
03F8:  BCF    F94.2
03FA:  CLRF   FB7
03FC:  CLRF   FB6
03FE:  MOVLW  3E
0400:  MOVWF  FBE
0402:  MOVLW  2C
0404:  MOVWF  FBD
0406:  MOVLW  FC
0408:  MOVWF  1A
040A:  MOVLW  70
040C:  MOVWF  19
040E:  MOVLW  FC
0410:  MOVWF  1C
0412:  MOVLW  70
0414:  MOVWF  1B
0416:  CLRF   1D
0418:  SETF   1E
041A:  CLRF   FCD
041C:  MOVLW  85
041E:  MOVWF  FCD
0420:  MOVLW  07
0422:  MOVWF  FCF
0424:  MOVLW  CF
0426:  MOVWF  FCE
0428:  NOP   
042A:  BSF    F9D.0
042C:  MOVLW  C0
042E:  IORWF  FF2,F
0430:  MOVF   FC1,W
0432:  ANDLW  C0
0434:  IORLW  0F
0436:  MOVWF  FC1
0438:  MOVLW  07
043A:  MOVWF  FB4
.................... {
.................... 	setup_adc_ports(NO_ANALOGS, VSS_VDD);
043C:  MOVF   FC1,W
043E:  ANDLW  C0
0440:  IORLW  0F
0442:  MOVWF  FC1
.................... 
.................... 	while(TRUE)
.................... 	{
.................... 
.................... 	pwm_off(MOTOR_2);// começa com  o MOTOR_2 desligado
0444:  BCF    1E.0
....................  	
.................... 	pwm_on(MOTOR_1);// começa com  o MOTOR_1 ligado
0446:  MOVLW  0C
0448:  IORWF  FBD,F
....................  	
.................... 	// varia do duty cycle de MOTOR_1 de 10% (100) a 90% (900) a cada 0.5s
.................... 	for(i=1; i< 10; i++){
044A:  CLRF   20
044C:  MOVLW  01
044E:  MOVWF  1F
0450:  MOVF   20,F
0452:  BNZ   0492
0454:  MOVF   1F,W
0456:  SUBLW  09
0458:  BNC   0492
.................... 	pwm_set_duty_percent(MOTOR_1,i*100);
045A:  MOVFF  20,22
045E:  MOVFF  1F,21
0462:  CLRF   24
0464:  MOVLW  64
0466:  MOVWF  23
0468:  RCALL  013A
046A:  MOVFF  02,22
046E:  MOVFF  01,21
0472:  MOVFF  02,24
0476:  MOVFF  01,23
047A:  BRA    023A
.................... 	delay_ms(500);
047C:  MOVLW  02
047E:  MOVWF  21
0480:  MOVLW  FA
0482:  MOVWF  22
0484:  RCALL  02BC
0486:  DECFSZ 21,F
0488:  BRA    0480
048A:  INCF   1F,F
048C:  BTFSC  FD8.2
048E:  INCF   20,F
0490:  BRA    0450
.................... 	}
.................... 	pwm_off(MOTOR_1);
0492:  MOVLW  F0
0494:  ANDWF  FBD,F
....................  	
.................... 	delay_ms(500);
0496:  MOVLW  02
0498:  MOVWF  21
049A:  MOVLW  FA
049C:  MOVWF  22
049E:  RCALL  02BC
04A0:  DECFSZ 21,F
04A2:  BRA    049A
....................  	
.................... 	// varia do duty cycle de MOTOR_1 de 10% (100) a 90% (900) a cada 0.5s
.................... 	pwm_on(MOTOR_2);
04A4:  BSF    1E.0
.................... 	for(i=1; i< 10; i++){
04A6:  CLRF   20
04A8:  MOVLW  01
04AA:  MOVWF  1F
04AC:  MOVF   20,F
04AE:  BNZ   04EE
04B0:  MOVF   1F,W
04B2:  SUBLW  09
04B4:  BNC   04EE
.................... 	pwm_set_duty_percent(MOTOR_2,i*100);
04B6:  MOVFF  20,22
04BA:  MOVFF  1F,21
04BE:  CLRF   24
04C0:  MOVLW  64
04C2:  MOVWF  23
04C4:  RCALL  013A
04C6:  MOVFF  02,22
04CA:  MOVFF  01,21
04CE:  MOVFF  02,24
04D2:  MOVFF  01,23
04D6:  BRA    02EA
.................... 	delay_ms(500);
04D8:  MOVLW  02
04DA:  MOVWF  21
04DC:  MOVLW  FA
04DE:  MOVWF  22
04E0:  RCALL  02BC
04E2:  DECFSZ 21,F
04E4:  BRA    04DC
04E6:  INCF   1F,F
04E8:  BTFSC  FD8.2
04EA:  INCF   20,F
04EC:  BRA    04AC
.................... 	}
.................... 
.................... 	pwm_off(MOTOR_2);
04EE:  BCF    1E.0
04F0:  BRA    0444
.................... 	 	
.................... 	}
.................... 
.................... }
04F2:  SLEEP 

Configuration Fuses:
   Word  1: C800   INTRC_IO FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV21 NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
